/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controllers;

import java.util.ArrayList;
import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpRequest;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import pojo.Note;
import pojo.NoteComment;
import pojo.Users;
import services.NoteService;
import services.UsersService;
import util.DateUtils;
import util.IDUtils;

/**
 *
 * @author hasee
 */
@Controller
@RequestMapping(value = "/note")
public class NoteController {
    
    @Autowired
    NoteService ns;
    @Autowired
    UsersService us;
    @RequestMapping(value = "add" ,method = RequestMethod.POST)
    public String addNote(@RequestParam("noteTitle") String title, @RequestParam("noteContent") String content, Model model, HttpSession session){
        System.out.println("--------------->");
        Note note = new Note(IDUtils.getUUID(), (Users) session.getAttribute("CURRENT_USER"), title, 0, content, DateUtils.getTimestamp(), DateUtils.getTimestamp());
        ns.addNote(note);
        model.addAttribute("noteList", ns.getAllNotes());
        return "user/myNote";
    }
    
    @RequestMapping(value = "/delete" , method = RequestMethod.POST)
    @ResponseBody
    public void deleteNote(String nid){
        ns.deleteNote(nid);
    }
    
    @RequestMapping(value ="/edit" ,method = RequestMethod.POST)
    public String editNote(Note note,Model model){
        ns.updateNote(note);
        model.addAttribute("noteList", ns.getAllNotes());
        return "user/myNote";
    }
    
    @RequestMapping(value = "showAll",method = RequestMethod.GET)
    public String showAllNotes(Model model){
        model.addAttribute("noteList",ns.getAllNotes());
        return "user/myNote";
    }
    
    @RequestMapping(value = "getANote",method = RequestMethod.GET)
    public String getANote(String nid,Model model){
        Note note = ns.getNoteById(nid);
        System.out.println(nid);
        
        note.setUsers(us.getAUser(note.getUsers().getUserId()));
        model.addAttribute("n", note);
        ArrayList<NoteComment> list = ns.getAllComments(note);
        for(NoteComment comments : list){
            comments.setUsers(us.getAUser(comments.getUsers().getUserId()));
        }
        model.addAttribute("commentList", list);
        return "noteDetail";
    }
    
    @RequestMapping(value = "/commentedit", method = RequestMethod.POST)
    public String editNoteComment(String comment, Model model, HttpSession session){
        System.out.println(comment);
        NoteComment noteComment = new NoteComment();
        noteComment.setNoteCommentId(IDUtils.getUUID());
        noteComment.setCommentContent(comment);
        Note note = ns.getNoteById("n01");
        noteComment.setNote(note);
        noteComment.setUsers((Users) session.getAttribute("CURRENT_USER")); 
        noteComment.setCommentTime(DateUtils.getTimestamp());
        ns.addNoteComment(noteComment);
        ArrayList<NoteComment> list = ns.getAllComments(note);
        System.out.println("=====>"+list.size());
        for(NoteComment comments : list){
            comments.setUsers(us.getAUser(comments.getUsers().getUserId()));
        }
        model.addAttribute("commentList", list);
        return "noteDetail";
    }
    
    
}
