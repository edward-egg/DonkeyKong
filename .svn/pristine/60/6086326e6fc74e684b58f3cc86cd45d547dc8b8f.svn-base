 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dao;

import java.util.ArrayList;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import pojo.Note;
import pojo.Tour;
import pojo.TourApply;
import pojo.Users;

/**
 *
 * @author hasee
 */
@Repository
public class TravelDaoImpl implements TravelDao{

    @Autowired
    SessionFactory factory;
    
    @Override
    public void insertTravel(Tour tour) {
        Session session = factory.openSession();
        Transaction trans = session.beginTransaction();
        session.save(tour);
        trans.commit();
        session.close();
    }
    @Override
    public void addTravelApply(TourApply tr){
        Session session = factory.openSession();
        Transaction trans = session.beginTransaction();
        session.save(tr);
        trans.commit();
        session.close();
    }

    @Override
    public void deleteTravel(String tid) {
        Session session = factory.openSession();
        Transaction trans = session.beginTransaction();
        session.delete(getTourById(tid));
        trans.commit();
        session.close();
    }

    @Override
    public void updateTravel(Tour tour) {
        Session session = factory.openSession();
        Transaction trans = session.beginTransaction();
        session.update(tour);
        trans.commit();
        session.close();
    }

    @Override
    public Tour getTourById(String tid) {
        System.out.println(tid+"-------------tid");
        String hqltour = "from Tour where tourId=?";
        Session session = factory.openSession();
        Query querytour = session.createQuery(hqltour).setString(0, tid);
        ArrayList<Tour> listtouri = (ArrayList<Tour>) querytour.list();
        session.close();
        return listtouri.get(0);
    }

    @Override
    public ArrayList<Tour> getAllTravel() {
        Session session = factory.openSession();
        Transaction trans = session.beginTransaction();
        String hql = "from Tour";
        ArrayList<Tour> list = (ArrayList<Tour>) session.createQuery(hql).list();
        trans.commit();
        session.close();
        return list;
    }

    @Override
    public ArrayList<Tour> getAllTravelByUserId(String uid) {
        String hql = "select n.tour.tourId from TourApply as n where users=?";
        Session session = factory.openSession();
        Query query = session.createQuery(hql).setString(0, uid);
        ArrayList<String> list = (ArrayList<String>) query.list();
        ArrayList<Tour> temp = new ArrayList<Tour>();
        for(int i=0; i<list.size(); i++){
                temp.add(getTourById(list.get(i)));
        }
        session.close();
        return temp;
    }

    @Override
    public ArrayList<String> getApplyUsersId(String tid) {
        String hql = "select t.users.userId from TourJoin as t where t.tour=? ";
        Session session = factory.openSession();
        Query query = session.createQuery(hql).setString(0, tid);
        ArrayList<String> list = (ArrayList<String>) query.list();
        session.close();
        return list;
    }
    
}
